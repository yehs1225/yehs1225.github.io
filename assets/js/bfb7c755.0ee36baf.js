"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8938],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,k=c["".concat(l,".").concat(u)]||c[u]||m[u]||s;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const s={},i="Rest Framework",o={unversionedId:"Django/[DJ]RestFramework",id:"Django/[DJ]RestFramework",title:"Rest Framework",description:"Django REST framework is a powerful and flexible toolkit for building Web APIs.",source:"@site/docs/Django/[DJ]RestFramework.md",sourceDirName:"Django",slug:"/Django/[DJ]RestFramework",permalink:"/docs/Django/[DJ]RestFramework",draft:!1,editUrl:"https://github.com/yehs1225/yehs1225.github.io/docs/Django/[DJ]RestFramework.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Packages And Tools",permalink:"/docs/Django/[DJ]PackagesAndTools"},next:{title:"Docker[1]\u57fa\u672c\u4ecb\u7d39",permalink:"/docs/Docker/Docker1\u57fa\u672c\u4ecb\u7d39"}},l={},p=[{value:"Setup",id:"setup",level:2},{value:"Installation",id:"installation",level:3},{value:"Add a App",id:"add-a-app",level:3},{value:"Serializers",id:"serializers",level:2},{value:"Overview",id:"overview",level:3},{value:"What&#39;s going on with Serializers",id:"whats-going-on-with-serializers",level:3},{value:"Implement Serializers",id:"implement-serializers",level:3},{value:"\u6e2c\u8a66\u5de5\u5177 <code>$pip install httpie</code>",id:"\u6e2c\u8a66\u5de5\u5177-pip-install-httpie",level:4},{value:"Class-based View",id:"class-based-view",level:2},{value:"import",id:"import",level:4},{value:"class",id:"class",level:4},{value:"urls",id:"urls",level:4},{value:"Mixins",id:"mixins",level:2},{value:"Import",id:"import-1",level:4},{value:"Class",id:"class-1",level:4},{value:"Generics",id:"generics",level:2},{value:"Routers and ViewSets",id:"routers-and-viewsets",level:2},{value:"posts/apps.py",id:"postsappspy",level:4},{value:"Project/urls.py",id:"projecturlspy",level:4},{value:"Posts/urls.py",id:"postsurlspy",level:4},{value:"Custom",id:"custom",level:4},{value:"Permissions",id:"permissions",level:2},{value:"\u81ea\u5b9a\u7fa9",id:"\u81ea\u5b9a\u7fa9",level:3},{value:"\u80cc\u666f\u8a2d\u5b9a",id:"\u80cc\u666f\u8a2d\u5b9a",level:4},{value:"\u5efa\u7acbpermissions.py",id:"\u5efa\u7acbpermissionspy",level:4},{value:"\u52a0\u5728view\u4e0a",id:"\u52a0\u5728view\u4e0a",level:4},{value:"Hyper Link",id:"hyper-link",level:2},{value:"\u80cc\u666f\u8a2d\u5b9a",id:"\u80cc\u666f\u8a2d\u5b9a-1",level:4},{value:"Import",id:"import-2",level:4},{value:"PostSerializer",id:"postserializer",level:4},{value:"OwnerSerializer",id:"ownerserializer",level:4},{value:"OwnerDetailView",id:"ownerdetailview",level:4},{value:"urls",id:"urls-1",level:4},{value:"Linking to frontends",id:"linking-to-frontends",level:2},{value:"\u80cc\u666f\u8a2d\u5b9a",id:"\u80cc\u666f\u8a2d\u5b9a-2",level:3},{value:"Add Templates",id:"add-templates",level:3},{value:"Fetch data",id:"fetch-data",level:3},{value:"Create data",id:"create-data",level:3},{value:"csrf token",id:"csrf-token",level:4},{value:"All code we need to post",id:"all-code-we-need-to-post",level:4},{value:"Detail View",id:"detail-view",level:3},{value:"Url",id:"url",level:5},{value:"\u53d6\u5f97pk",id:"\u53d6\u5f97pk",level:5},{value:"fetch data",id:"fetch-data-1",level:5},{value:"Add link at homepage",id:"add-link-at-homepage",level:5},{value:"Update view",id:"update-view",level:3},{value:"\u66f4\u6539form\u6b04\u4f4d",id:"\u66f4\u6539form\u6b04\u4f4d",level:5},{value:"PUT\u56deserver\u7aef",id:"put\u56deserver\u7aef",level:5},{value:"Delete View",id:"delete-view",level:3},{value:"delete post",id:"delete-post",level:5},{value:"delete btn",id:"delete-btn",level:5},{value:"delete view",id:"delete-view-1",level:5},{value:"urlpatterns",id:"urlpatterns",level:5}],d={toc:p};function m(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rest-framework"},"Rest Framework"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Django REST framework is a powerful and flexible toolkit for building Web APIs.")),(0,r.kt)("p",null,"\u6839\u64da",(0,r.kt)("a",{parentName:"p",href:"https://www.django-rest-framework.org/"},"Home - Django REST framework"),"\u7684\u89e3\u91cb\uff0c\u6b64\u6846\u67b6\u53ef\u4ee5\u63d0\u4f9b\u597d\u7528\u7684\u5957\u4ef6\u5e6b\u52a9\u6211\u5011\u5efa\u7acbREST APIs."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"$pip install djangorestframework")),(0,r.kt)("li",{parentName:"ol"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"'rest_framework'")," to your ",(0,r.kt)("inlineCode",{parentName:"li"},"INSTALLED_APPS")," setting."),(0,r.kt)("li",{parentName:"ol"},"Add the following to your root ",(0,r.kt)("inlineCode",{parentName:"li"},"urls.py")," file."),(0,r.kt)("li",{parentName:"ol"},"Add configuration dictionary named ",(0,r.kt)("inlineCode",{parentName:"li"},"REST_FRAMEWORK")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"settings.py")," .")),(0,r.kt)("p",null,"\u5df2\u7d93\u53ef\u4ee5run server \u4e26\u5230\u7db2\u5740api-auth/login\uff08logout\uff09\u53bb\u767b\u5165\uff08\u51fa\uff09\u3002"),(0,r.kt)("h3",{id:"add-a-app"},"Add a App"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u65b0\u589e\u4e00\u500b\u540d\u70baposts\u7684app"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$python manage.py startapp posts")),(0,r.kt)("li",{parentName:"ul"},"\u65b0\u589e\u81f3INSTALLED_APPS"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u8a2d\u5b9amodels.py \u548c amin.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/models.py\nfrom sre_parse import CATEGORIES\nfrom unicodedata import category\nfrom django.db import models\n\nCATEGORY_CHOICES = (\n    ('DJ','Django'),\n    ('RR','Ruby on Rails')\n)\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    custom_id = models.IntegerField()\n    category = models.CharField(max_length=3,choices=CATEGORY_CHOICES)\n    publish_day = models.DateTimeField(auto_now_add=True)#update only when created\n    last_update = models.DateTimeField(auto_now=True)#update when Model.save() is called.\n    \n    def __str__(self):\n        return self.title\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/admin.py\nfrom django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)\n")))),(0,r.kt)("h2",{id:"serializers"},"Serializers"),(0,r.kt)("p",null,"\u7c21\u6613\u6982\u5ff5\u4e0a\u4f86\u8aaa\uff0cDjango REST Framework \u7576\u4e2d\u7684serializers\u8ca0\u8cac\u7db2\u9801\u4f7f\u7528\u8005\u548c\u8cc7\u6599\u5eab\u4e2d\u9593\u7684\u8cc7\u6599\u8f49\u63db\u50b3\u905e\u3002\u4f8b\u5982\uff1a\u5c07objects\u8f49\u63db\u6210JavaScripts\u548c\u524d\u7aef\u6846\u67b6\u53ef\u4ee5\u7406\u89e3\u7684\u8cc7\u6599\u578b\u614b\uff08.json\uff09\uff1b\u800c\u53cd\u5411\u5247\u7a31\u70baDeserialization\uff0c\u5728\u521d\u6b65\u9a57\u8b49\u8cc7\u6599\u6b63\u78ba\u6027\u5f8c\uff0c\u5c07\u8490\u96c6\u5230\u7684\u8cc7\u6599\u8f49\u63db\u70ba\u53ef\u5132\u5b58\u5728\u8cc7\u6599\u5eab\u4e2d\u7684\u5f62\u5f0f\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6587\u4ef6rest_framework/serializers.py")),(0,r.kt)("p",null,"Serializers and ModelSerializers \u548c Forms and ModelForms\u985e\u4f3c\uff0c\u4e0d\u540c\u7684\u5730\u65b9\u5728\u65bc\u4ed6\u5011\u4e0d\u53d7\u9650\u65bc HTML output \u4ee5\u53ca \u63a5\u6536form"),(0,r.kt)("p",null,"\u5728REST framework\u7684Serialization\u662f\u5169\u968e\u6bb5\u7684\u904e\u7a0b:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u8655\u7406\u8907\u96dc\u8cc7\u6599\u578b\u614b\u50cf\u662fmodel instances\u548cpython primitives\u4e4b\u9593\u7684\u95dc\u4fc2.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u8655\u7406python primitives\u548c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"request\u85c9\u7531parsers "),(0,r.kt)("li",{parentName:"ul"},"response\u85c9\u7531renderers")))),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"serializers\u53ef\u4ee5\u5728App\u5167\u6216\u4e4b\u5916\u8a2d\u5b9a\uff0c\u4e0b\u9762\u5728App\u4e2d\u8a2d\u5b9a\u3002"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5728posts\u4e2d\u65b0\u589e",(0,r.kt)("inlineCode",{parentName:"p"},"serializers.py")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/serializers.py\nfrom dataclasses import fields\nfrom rest_framework import serializers\nfrom .models import Post\n\nclass PostSerializer(serializers.ModelSerializer):\n    #Meta class is a class of a class that defines how a class behaves\n    class Meta:\n        model = Post\n        fields = (\n            'title',\n            'custom_id',\n            'category',\n            'publish_day',\n            'last_update',\n        )\n")))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5728posts\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"views.py")," \u5efa\u7acb\u4e00\u500bview\uff0c\u9019\u500bview\u4e3b\u8981\u7684\u4f5c\u7528\u5c31\u662f\u63a5\u6536data\u7136\u5f8c\u50b3\u7d66serializer\u53bb\u89e3\u6790\uff08parsing\uff09\uff0c\u518d\u56de\u50b3serializer\u89e3\u6790\u7684response\u7d66\u4f7f\u7528\u8005\u700f\u89bd"),(0,r.kt)("p",{parentName:"li"},"\u6709\u5169\u500b\u57fa\u672c\u7684API view\u53ef\u4f7f\u7528\uff0c\u4e00\u500b\u7528\u5728class\u3001\u4e00\u500b\u7528\u5728def"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Class : ",(0,r.kt)("inlineCode",{parentName:"li"},"from rest_framework.views import APIView")),(0,r.kt)("li",{parentName:"ul"},"def : ",(0,r.kt)("inlineCode",{parentName:"li"},"from rest_framework.decorators import api_view"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/views.py\nfrom django.shortcuts import render\nfrom rest_framework.views import APIView\nfrom rest_framework.permissions import AllowAny\nfrom rest_framework.response import Response\nfrom .models import Post\nfrom .serializers import PostSerializer\n\nclass PostView(APIView):\n    permission_classes =(AllowAny,)\n\n    def get(self,request,*args,**kwargs):\n        queryset = Post.objects.all()\n        serializer = PostSerializer(queryset,many=True)\n        return Response(serializer.data)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u65b0\u589e\u8def\u5f91project/urls.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/urls.py\nfrom django.contrib import admin\nfrom django.urls import path,include\nfrom posts.views import PostView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/',include('rest_framework.urls')),\n    path('api/posts/',PostView.as_view(),name='post-list')\n]\n")))),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(5529).Z,width:"1351",height:"536"})),(0,r.kt)("h3",{id:"whats-going-on-with-serializers"},"What's going on with Serializers"),(0,r.kt)("p",null,"\u85c9\u7531\u5728python shell\u64cd\u4f5c\u4f86\u770bserializers\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u5b8c\u6210\u7684\u52d5\u4f5c\uff0c\u5982\u540c\u524d\u9762\u4ecb\u7d39serializer\uff0c\u4e3b\u8981\u5c55\u793a\u5176 ",(0,r.kt)("strong",{parentName:"p"},"\u8f49\u63db\u8cc7\u6599\u578b\u614b\uff0c\u4f7f\u5f97\u8cc7\u6599\u5728\u524d\u5f8c\u7aef\u4ea4\u63db")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u555f\u52d5python shell ",(0,r.kt)("inlineCode",{parentName:"li"},"$python manage.py shell"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'(env) yehs1225@yehs1225-VirtualBox:~/django-rf$ python manage.py shell\nPython 3.9.7 (default, Sep 16 2021, 13:09:58) \n[GCC 7.5.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n(InteractiveConsole)\n>>>\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f15\u5165models\u3001rest_framework\u3001serializer"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>>from posts.models import Post\n>>> from posts.serializers import PostSerializer\n>>> from rest_framework.renderers import JSONRenderer\n>>> from rest_framework.parsers import JSONParser\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u65b0\u589e\u4e00\u500binstance - post\uff0c\u78ba\u8a8d\u5f8c\u5132\u5b58"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>> post = Post(title='something new',custom_id=2,category='DJ')\n#Check the instance\n>>> post\n<Post: something new>\n>>> post.save()\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u50b3\u5165serializer\u4e26\u67e5\u770b\uff0c\u5f97\u5230python\u539f\u751f\u7684\u8cc7\u6599\u5132\u5b58\u65b9\u5f0f\u4e4b\u4e00 : dictionary"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>> serializer = PostSerializer(post)\n>>> serializer.data\n#got python dictionary\n{'title': 'something new', 'custom_id': 2, 'category': 'DJ', 'publish_day': '2022-03-21T13:40:05.324098Z', 'last_update': '2022-03-21T13:40:05.324157Z'}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u70ba\u4e86\u8b93\u524d\u7aef\u65b9\u4fbf\u4f7f\u7528\uff0c\u6211\u5011\u53ef\u4ee5",(0,r.kt)("strong",{parentName:"p"},"\u8f49\u6210JSON file")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'>>> content=JSONRenderer().render(serializer.data)\n>>> content\nb\'{"title":"something new","custom_id":2,"category":"DJ","publish_day":"2022-03-21T13:40:05.324098Z","last_update":"2022-03-21T13:40:05.324157Z"}\'\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u518d\u628aJSON file\u8f49\u63db\u56de\u4f86")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>> import io\n>>> stream = io.BytesIO(content)\n>>> data=JSONParser().parse(stream)\n>>> data\n{'title': 'something new', 'custom_id': 2, 'category': 'DJ', 'publish_day': '2022-03-21T13:40:05.324098Z', 'last_update': '2022-03-21T13:40:05.324157Z'}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u547c\u53ebserializer\u4ee5\u5132\u5b58"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>> serializer = PostSerializer(data=data)\n>>> serializer\nPostSerializer(data={'title': 'something new', 'custom_id': 2, 'category': 'DJ', 'publish_day': '2022-03-21T13:40:05.324098Z', 'last_update': '2022-03-21T13:40:05.324157Z'}):\n    title = CharField(max_length=100)\n    custom_id = IntegerField()\n    category = ChoiceField(choices=(('DJ', 'Django'), ('RR', 'Ruby on Rails')))\n    publish_day = DateTimeField(read_only=True)\n    last_update = DateTimeField(read_only=True)\n>>> serializer.is_valid()\nTrue\n>>> serializer.validated_data\nOrderedDict([('title', 'something new'), ('custom_id', 2), ('category', 'DJ')])\n>>> serializer.save()\n<Post: something new>\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u67e5\u770b\u6240\u6709post"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},">>> Post.objects.all()\n<QuerySet [<Post: First post>, <Post: something new>, <Post: something new>]>\n>>> serializer=PostSerializer(Post.objects.all(),many=True)\n>>> serializer.data\n[OrderedDict([('title', 'First post'), ('custom_id', 3), ('category', 'DJ'), ('publish_day', '2022-03-21T13:29:20.879831Z'), ('last_update', '2022-03-21T13:29:20.879858Z')]), OrderedDict([('title', 'something new'), ('custom_id', 2), ('category', 'DJ'), ('publish_day', '2022-03-21T13:40:05.324098Z'), ('last_update', '2022-03-21T13:40:05.324157Z')]), OrderedDict([('title', 'something new'), ('custom_id', 2), ('category', 'DJ'), ('publish_day', '2022-03-21T14:00:23.659995Z'), ('last_update', '2022-03-21T14:00:23.660031Z')])]\n")))),(0,r.kt)("h3",{id:"implement-serializers"},"Implement Serializers"),(0,r.kt)("p",null,"\u900f\u904e\u5efa\u7acbview\u4f86\u5b8c\u6210!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#post/views.py\nfrom django.shortcuts import render\nfrom .models import Post\nfrom .serializers import PostSerializer\n\nfrom django.http import HttpResponse,JsonResponse\nfrom django.views.decorators.csrf import csrf_exempt\nfrom rest_framework.parsers import JSONParser\n\n@csrf_exempt\ndef post_list(request):\n    if request.method == 'GET':\n        queryset = Post.objects.all()\n        serializer = PostSerializer(queryset,many=True)\n        return JsonResponse(serializer.data,safe=False)\n\n    if request.method =='POST':\n        data = JSONParser.parse(request)\n        serializer = PostSerializer(data=data)\n        if serializer.is_valid():\n            serializer.save()\n            return JsonResponse(serializer.data,status=201)\n        return JsonResponse(serializer.errors,status=400)\n        \n@csrf_exempt\ndef post_detail(request,pk):\n    try:\n        post=Post.objects.get(pk=pk)\n    except Post.DoesNotExist:\n        return HttpResponse(status=404)\n\n    if request.method =='GET':\n        serializer = PostSerializer(post)\n        return JsonResponse(serializer.data)\n    \n    elif request.method == 'PUT':\n        data = JSONParser(request)\n        serializer = PostSerializer(post,data=data)\n        if serializer.is_valid():\n            serializer.save()\n            return JsonResponse(serializer.data)\n        return JsonResponse(serializer.errors,status=400)\n    \n    elif request.method == 'DELETE':\n        post.delete()\n        return HttpResponse(status=204)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/urls.py\nfrom django.contrib import admin\nfrom django.urls import path,include\nfrom posts.views import PostView,post_list,post_detail\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/',include('rest_framework.urls')),\n    # path('api/posts/',PostView.as_view(),name='post-list'),\n    path('api/post-list/',post_list,name='post-list'),\n    path('api/posts/<int:pk>/',post_detail,name='post-detail'),\n]\n")),(0,r.kt)("h4",{id:"\u6e2c\u8a66\u5de5\u5177-pip-install-httpie"},"\u6e2c\u8a66\u5de5\u5177 ",(0,r.kt)("inlineCode",{parentName:"h4"},"$pip install httpie")),(0,r.kt)("p",null,"\u958b\u555fserver\u5f8c\uff0c\u53ef\u4ee5\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"$http <\u6e2c\u8a66\u5167\u5bb9>"),"\u53bb\u6e2c\u8a66\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'(env) yehs1225@yehs1225-VirtualBox:~/django-rf$ http http://127.0.0.1:8000/api/post-list/\nHTTP/1.1 200 OK\nContent-Length: 459\nContent-Type: application/json\nCross-Origin-Opener-Policy: same-origin\nDate: Mon, 21 Mar 2022 15:52:11 GMT\nReferrer-Policy: same-origin\nServer: WSGIServer/0.2 CPython/3.9.7\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\n\n[\n    {\n        "category": "DJ",\n        "custom_id": 3,\n        "last_update": "2022-03-21T13:29:20.879858Z",\n        "publish_day": "2022-03-21T13:29:20.879831Z",\n        "title": "First post"\n    },\n    {\n        "category": "DJ",\n        "custom_id": 2,\n        "last_update": "2022-03-21T13:40:05.324157Z",\n        "publish_day": "2022-03-21T13:40:05.324098Z",\n        "title": "something new"\n    },\n    {\n        "category": "DJ",\n        "custom_id": 2,\n        "last_update": "2022-03-21T14:00:23.660031Z",\n        "publish_day": "2022-03-21T14:00:23.659995Z",\n        "title": "something new"\n    }\n]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'(env) yehs1225@yehs1225-VirtualBox:~/django-rf$ http http://127.0.0.1:8000/api/posts/1/\nHTTP/1.1 200 OK\nContent-Length: 149\nContent-Type: application/json\nCross-Origin-Opener-Policy: same-origin\nDate: Mon, 21 Mar 2022 15:59:50 GMT\nReferrer-Policy: same-origin\nServer: WSGIServer/0.2 CPython/3.9.7\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\n\n{\n    "category": "DJ",\n    "custom_id": 3,\n    "last_update": "2022-03-21T13:29:20.879858Z",\n    "publish_day": "2022-03-21T13:29:20.879831Z",\n    "title": "First post"\n}\n')),(0,r.kt)("h2",{id:"class-based-view"},"Class-based View"),(0,r.kt)("p",null,"\u7528Class\u7684\u597d\u8655\u662f\u53ef\u4ee5\u8b93\u9019\u4e9b\u5143\u4ef6\u88ab\u91cd\u8907\u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u4e0a\u9762\u4f7f\u7528def\u65b9\u5f0f\u4f86get\u3001post\u7b49\uff0c\u4f46\u662f\u56e0\u70ba\u6c92\u6709\u8a2d\u5b9aviews\u6240\u4ee5\u6211\u5011\u53ea\u80fd\u7528httpie\u4f86\u6e2c\u8a66\uff0c\u73fe\u5728\u5c07\u4e0a\u9762\u7684\u5167\u5bb9\u6539\u5beb\u6210Class\u3002"),(0,r.kt)("h4",{id:"import"},"import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rest_framework.views import APIView\nfrom rest_framework.permissions import AllowAny\nfrom rest_framework.response import Response\nfrom rest_framework.status import HTTP_200_OK,HTTP_201_CREATED,HTTP_400_BAD_REQUEST,HTTP_204_NO_CONTENT\nfrom .models import Post\nfrom .serializers import PostSerializer\n")),(0,r.kt)("h4",{id:"class"},"class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/views.py\nclass PostView(APIView):\n    permission_classes =(AllowAny,)\n\n    def get(self,request,*args,**kwargs):\n        queryset = Post.objects.all()\n        serializer = PostSerializer(queryset,many=True)\n        return Response(serializer.data)\n    \n    def post(self,request,*args,**kwargs):\n        serializer = PostSerializer(data=request.data)#.data instead of .post\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data,status=HTTP_201_CREATED)\n        return Response(serializer.errors,status=HTTP_400_BAD_REQUEST)\n\n    def put(self,request,pk,*args,**kwargs):\n        #query the data\n        post = Post.objects.get(pk=pk)\n        serializer = PostSerializer(post,data=request.data)#.data instead of .post\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data)\n        return Response(serializer.errors,status=HTTP_400_BAD_REQUEST)\n    \n    def delete(self,request,pk,*args,**kwargs):\n        #query the data\n        post = Post.objects.get(pk=pk)\n        post.delete()\n        return Response(status=HTTP_204_NO_CONTENT)\n")),(0,r.kt)("h4",{id:"urls"},"urls"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/urls.py\nfrom django.contrib import admin\nfrom django.urls import path,include\nfrom posts.views import PostView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/',include('rest_framework.urls')),\n    path('api/posts/',PostView.as_view(),name='post-list'),\n    path('api/posts/<int:pk>/',PostView.as_view(),name='post-detail'),\n]\n")),(0,r.kt)("h2",{id:"mixins"},"Mixins"),(0,r.kt)("p",null,"A great article talk about Mixins in Python : ",(0,r.kt)("a",{parentName:"p",href:"https://www.residentmar.io/2019/07/07/python-mixins.html"},"Aleksey Bilogur\u2014 Blog (residentmar.io)"),"."),(0,r.kt)("p",null,'\u5c31\u6211\u7684\u7406\u89e3\uff0c\u56e0\u70ba\u7269\u4ef6\u5c0e\u5411\u7684\u8a2d\u8a08\uff0c\u6211\u5011\u5e0c\u671b\u5275\u9020\u4e00\u500bclass\u5177\u6709\u67d0\u4e9b"\u7279\u5fb5"\uff08\u65b9\u6cd5\uff09\u6642\uff0c\u5c31\u6703\u5229\u7528\u7e7c\u627f\uff08inherit\uff09\u7684\u65b9\u5f0f\uff0c\u9019\u500bclass\u4e5f\u5c31\u6210\u70ba\u5176parent class\u7684subclass\uff0c\u64c1\u6709parent class\u7684\u6240\u6709methods\u53cavariables\u3002\u7136\u800c\uff0c\u7576\u5e0c\u671b\u4e00class\u53ef\u4ee5\u7e7c\u627f\u591a\u500bclass\u6642\uff0c\u672c\u8cea\u4e0a\u662f\u5141\u8a31\u7e7c\u627f\u591a\u9805class\u7684\uff0c\u4f46\u662f\u9019\u53ef\u80fd\u9020\u6210\u4e0d\u6613\u5bdf\u89ba\u7684\u885d\u7a81\uff0c\u9020\u6210\u4f60\u5728\u4f7f\u7528\u4e0a\u9762\u51fa\u932f\u4e5f\u96e3\u4ee5debug\u3002\u56e0\u6b64\uff0c\u5c31\u6709\u4e86Mixins\u53ef\u4f9b\u4f7f\u7528\uff0c\u6211\u5011\u50c5\u4f7f\u7528\u4f7f\u7528\u5fc5\u8981\u7684method\u3002'),(0,r.kt)("h4",{id:"import-1"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rest_framework import mixins,generics\n")),(0,r.kt)("h4",{id:"class-1"},"Class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PostMixinListView(\n    mixins.ListModelMixin,\n    mixins.CreateModelMixin,\n    generics.GenericAPIView):\n    queryset=Post.objects.all()\n\n    #define a set of serializer method that will be used in this class\n    serializer_class = PostSerializer\n\n    def get(self,request,*args,**kwargs):\n        return self.list(request,*args,**kwargs)\n\n    def post(self,request,*args,**kwargs):\n        return self.create(request,*args,**kwargs)\n")),(0,r.kt)("h2",{id:"generics"},"Generics"),(0,r.kt)("p",null,"Generics.py \u88e1\u9762\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"LisrAPIView"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"CreateAPIView"),"\u7b49\u7b49\uff0c\u800c\u4ed6\u5011\u5df2\u7d93\u4f7f\u7528\u4e86mixins\u6240\u4ee5\u7b49\u65bc\u6211\u5011\u6bd4\u4e0a\u9762Mixins\u7684\u7bc4\u4f8b\u518d\u66f4\u7cbe\u7c21\u4e00\u4e9b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PostListView(generics.ListAPIView):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer\n\nclass PostDetailView(generics.RetrieveAPIView):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer\n\nclass PostDestroyView(generics.DestroyAPIView):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer    \n")),(0,r.kt)("h2",{id:"routers-and-viewsets"},"Routers and ViewSets"),(0,r.kt)("p",null,"ViewSets\u662f\u4e00\u7a2eclass based view\uff0c\u5b9a\u7fa9\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u5c07\u6240\u6709Mixin\u90fd\u653e\u9032\u4f86\u4e86\uff0c\u56e0\u6b64\uff0c\u6211\u5011\u53ea\u9700\u8981\u9019\u500b\u5c31\u53ef\u4ee5\u53d6\u4ee3\u4e0a\u9762\u5206\u5225\u5b9a\u7fa9\u5404\u7a2eview\u7684Class\u3002\u901a\u5e38\u6703\u642d\u914d",(0,r.kt)("strong",{parentName:"p"},"Router"),"\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'class ModelViewSet(mixins.CreateModelMixin,\n                   mixins.RetrieveModelMixin,\n                   mixins.UpdateModelMixin,\n                   mixins.DestroyModelMixin,\n                   mixins.ListModelMixin,\n                   GenericViewSet):\n    """\n    A viewset that provides default `create()`, `retrieve()`, `update()`,\n    `partial_update()`, `destroy()` and `list()` actions.\n    """\n    pass    \n')),(0,r.kt)("h4",{id:"postsappspy"},"posts/apps.py"),(0,r.kt)("p",null,"\u5f15\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"viewsets"),"\uff0c\u5176\u4ed6\u8a2d\u5b9a\u8ddf\u4e0a\u9762\u4e00\u6a23"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rest_framework import viewsets\n#...\nclass PostViewSet(viewsets.ModelViewSet):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer        \n    permission_classes = (AllowAny,)\n")),(0,r.kt)("h4",{id:"projecturlspy"},"Project/urls.py"),(0,r.kt)("p",null,"\u5728\u5c08\u6848\u7684urls\u4e2d\uff0c\u5305\u542b\u80fd\u5920\u9023\u5230app < posts > \u7684\u8def\u5f91"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"path('api/',include('posts.urls'))\n")),(0,r.kt)("h4",{id:"postsurlspy"},"Posts/urls.py"),(0,r.kt)("p",null,"\u65b0\u589eapp\u5167\u81ea\u5df1\u7684urls.py,\u7576\u9023\u5230posts\u6642\u6703\u4f7f\u7528PostViewset\uff0c\u5176\u4e2d\u5c31\u5305\u542b\u4e86get\u3001post\u7b49\u7b49\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.urls import path,include\nfrom rest_framework.routers import DefaultRouter\nfrom .views import PostViewSet\n\nrouter = DefaultRouter()\nrouter.register('posts',PostViewSet)\n\nurlpatterns=[\n    path('',include(router.urls))\n]\n")),(0,r.kt)("h4",{id:"custom"},"Custom"),(0,r.kt)("p",null,"\u82e5\u6709\u7279\u6b8a\u7684\u9700\u6c42\u9700\u8981\u6539\u5beb\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"post_detail = PostViewSet.as_view({\n    'get':'list',\n    'post':'create'\n})\n\nurlpatterns=[\n    path('',include(router.urls)),\n    path('custom/',post_detail,name='custom')\n]\n")),(0,r.kt)("h2",{id:"permissions"},"Permissions"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"rest_framework.permissions"),"\u4e2d\u6709\u63d0\u4f9b\u5e7e\u9805\u5e38\u7528\u7684\u6b0a\u9650\u8a2d\u5b9a\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"AllowAny"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"IsAuthenticated"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"IsAdminUser"),"\uff0c\u4f7f\u7528\u65b9\u6cd5\u70ba\u52a0\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"permission_classes"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rest_framework.permissions import IsAuthenticated\n...\nclass PostListView(generics.ListAPIView):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer\n    permission_classes = (IsAuthenticated,)\n")),(0,r.kt)("h3",{id:"\u81ea\u5b9a\u7fa9"},"\u81ea\u5b9a\u7fa9"),(0,r.kt)("h4",{id:"\u80cc\u666f\u8a2d\u5b9a"},"\u80cc\u666f\u8a2d\u5b9a"),(0,r.kt)("p",null,"\u4fee\u6539models.py\u4f7f\u5f97post\u591a\u4e00\u6b04\u4f4downer\uff0c\u9023\u7d50\u5230\u7279\u5b9auser"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib.auth import get_user_model\n\n#User model that is active\nUser = get_user_model()\n...\nclass Post(models.Model):\n    owner = models.ForeignKey(User,on_delete=models.CASCADE)\n    ...\n")),(0,r.kt)("h4",{id:"\u5efa\u7acbpermissionspy"},"\u5efa\u7acbpermissions.py"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/permissions.py\nfrom rest_framework import permissions\n\nclass IsOwnerPermission(permissions.BasePermission):\n\n    def has_object_permission(self, request, view, obj):\n        return obj.owner==request.user\n")),(0,r.kt)("h4",{id:"\u52a0\u5728view\u4e0a"},"\u52a0\u5728view\u4e0a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from .permissions import IsOwnerPermission\n...\nclass PostDetailView(generics.RetrieveAPIView):\n    queryset=Post.objects.all()\n    serializer_class = PostSerializer\n    permission_classes = (IsAuthenticated,IsOwnerPermission)\n")),(0,r.kt)("h2",{id:"hyper-link"},"Hyper Link"),(0,r.kt)("h4",{id:"\u80cc\u666f\u8a2d\u5b9a-1"},"\u80cc\u666f\u8a2d\u5b9a"),(0,r.kt)("p",null,"\u8b93list\u986f\u793aposts\u7684owner\u53ef\u4ee5\u9023\u7d50\u5230owner detail page"),(0,r.kt)("h4",{id:"import-2"},"Import"),(0,r.kt)("p",null,"\u70ba\u4e86\u53d6\u5f97\u4f7f\u7528\u8005\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"serializers.py"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"views.py"),"\u90fd\u9700\u8981\u52a0\u4e0a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib.auth import get_user_model\n\nUser = get_user_model()\n")),(0,r.kt)("h4",{id:"postserializer"},"PostSerializer"),(0,r.kt)("p",null,"\u52a0\u4e0a\u8981\u9023\u7d50\u7684\u6b04\u4f4d"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"owner = serializers.HyperlinkedIdentityField(many=False,view_name='owner-detail')")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/serializers.py\nclass PostSerializer(serializers.ModelSerializer):\n    owner = serializers.HyperlinkedIdentityField(many=False,view_name='owner-detail')\n    class Meta:\n        ...\n")),(0,r.kt)("h4",{id:"ownerserializer"},"OwnerSerializer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/serializers.py\nclass OwnerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=User\n        fields=(\n            'id','username'\n        )\n")),(0,r.kt)("h4",{id:"ownerdetailview"},"OwnerDetailView"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/views.py\nclass OwnerDetailView(generics.RetrieveAPIView):\n    queryset = User.objects.all()\n    serializer_class = OwnerSerializer\n")),(0,r.kt)("h4",{id:"urls-1"},"urls"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/urls.py\nurlpatterns = [\n...    path('api/owner/<int:pk>/',OwnerDetailView.as_view(),name='owner-detail'),\n]\n")),(0,r.kt)("h2",{id:"linking-to-frontends"},"Linking to frontends"),(0,r.kt)("h3",{id:"\u80cc\u666f\u8a2d\u5b9a-2"},"\u80cc\u666f\u8a2d\u5b9a"),(0,r.kt)("p",null,"\u5c07\u5148\u524dapp < posts > \u7684\u6a94\u6848\u90fd\u5148\u79fb\u5230archive\u8cc7\u6599\u593e\u4e2d\uff0c\u4ee5generics\u5b8c\u6210\u8a2d\u5b9a\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"project/urls.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib import admin\nfrom django.urls import path,include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/',include('rest_framework.urls')),\n    path('api/posts/',include('posts.urls'))\n]\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"posts/models.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib.auth import get_user_model\nfrom django.db import models\n\nUser = get_user_model()\n\nclass Author(models.Model):\n    user = models.OneToOneField(User,on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.user.username\n\nclass Post(models.Model):\n    author = models.ForeignKey(Author,on_delete=models.CASCADE)\n    title = models.CharField(max_length=120)\n    content = models.TextField()\n    publish_date=models.DateTimeField(auto_now_add=True)\n    updated=models.DateTimeField(auto_now=True)\n\n    def __str__(self):\n        return self.title\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"posts/admin.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib import admin\nfrom .models import Author,Post\n\nadmin.site.register(Author)\nadmin.site.register(Post)\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"posts/serializers.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pyexpat import model\nfrom rest_framework import serializers\nfrom .models import Post\n\nclass PostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Post\n        fields=(\n            'id',\n            'title',\n            'content',\n            'publish_date',\n            'updated',\n            'author'\n        )\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"posts/views"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rest_framework.generics import(\n    ListAPIView,\n    RetrieveAPIView,\n    CreateAPIView,\n    UpdateAPIView,\n    DestroyAPIView\n)\nfrom rest_framework.permissions import IsAuthenticated,AllowAny\nfrom .models import Author,Post\nfrom .serializers import PostSerializer\n\nclass PostListView(ListAPIView):\n    permission_classes=(AllowAny,)\n    serializer_class = PostSerializer\n    queryset = Post.objects.all()\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"posts/urls.py"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from django.contrib import admin\nfrom django.urls import path,include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/',include('rest_framework.urls')),\n    path('api/posts/',include('posts.urls'))\n]\n")))),(0,r.kt)("h3",{id:"add-templates"},"Add Templates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5728root\u65b0\u5efa\u8cc7\u6599\u593etemplates\uff0c\u65b0\u589e",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/settings.py\nimport os\nTEMPLATES = [\n    {#...\n    'DIRS': [os.path.join(BASE_DIR,'templates')],    \n    }\n]\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5728root\u65b0\u589eStatic\u8cc7\u6599\u593e\uff0c"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#project/settings.py\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]\nSTATIC_ROOT='static_root'\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#projects/urls.py\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n#...\nif settings.DEBUG:\n    urlpatterns += static(settings.STATIC_URL,document_root=settings.STATIC)\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"index.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-django"},'{% load static %}\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content=\'ie=edge\'>\n    <title>Django RF</title>\n    </head>\n<body>\n    <script src="{% static \'js/main.js\' %}"><\/script>\n</body>\n</html> \n')))),(0,r.kt)("h3",{id:"fetch-data"},"Fetch data"),(0,r.kt)("p",null,"\u8cc7\u6599\u8981\u8f49\u6210json : ",(0,r.kt)("inlineCode",{parentName:"p"},".json()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// fetch data and render\n// create a DOM node\nconst createNode=(element)=>{\n    return document.createElement(element);\n}\n\n//append a child node to it's parent node\nconst append=(parent,child)=>{\n    return parent.appendChild(child);\n}\n\n//fetch api data\nconst getPostList=()=>{\n    fetch('/api/posts')\n    .then(res => res.json())\n    .then(data=>{\n        //render the data we get\n        renderPosts(data)\n    })\n    .catch(err=>{\n        console.error(err)\n    })\n}\n\nconst renderPosts=(data)=>{\n    // for every value in the data, render it\n    return data.map(post=>{\n        renderPost(post);\n    })\n}\n\nconst renderPost=(post)=>{\n    //make every instance a node\n    const root = document.getElementById('root');\n    const div =createNode('div');\n    div.className='post-item';\n    const title = createNode('h2');\n    const publishDate = createNode('span')\n    const lastUpdated = createNode('span')\n    const content = createNode('p');\n    const author = createNode('small');\n    //add inner text to the node\n    author.innerText=`  written by ${post.author}`;\n    title.innerText=post.title;\n    content.innerText=post.content;\n    publishDate.innerText=`Published : ${new Date(post.publish_date).toDateString()}\\n`;\n    lastUpdated.innerText=`Last Updated : ${new Date(post.updated).toDateString()}`;\n    //append the nodes\n    append(title,author)\n    append(div,title);\n    append(div,content);   \n    append(div,publishDate);   \n    append(div,lastUpdated);   \n    append(root,div)\n}\n\ngetPostList()\n")),(0,r.kt)("h3",{id:"create-data"},"Create data"),(0,r.kt)("p",null,"\u5728\u6c92\u767b\u5165admin\u7684\u72c0\u614b\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5post\u3002"),(0,r.kt)("p",null,"\u7136\u800c\u82e5\u5df2\u767b\u5165\u6703\u9020\u6210403 forbidden\uff0c\u89e3\u6c7a\u65b9\u6cd5\u662f",(0,r.kt)("strong",{parentName:"p"},"\u8981\u8a2d\u5b9acsrf token ",(0,r.kt)("a",{parentName:"strong",href:"https://docs.djangoproject.com/en/3.2/ref/csrf/#ajax"},"Cross Site Request Forgery protection")),"\uff0c\u6839\u64da\u6587\u4ef6\u8aaa\u660e\u7c21\u5316\u6210\u4e0b\u9762\u6b65\u9a5f\uff1a"),(0,r.kt)("h4",{id:"csrf-token"},"csrf token"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u7372\u53d6cookie"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f9ecookie\u4e2d\u627e\u5230csrftoken"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const csrftoken = getCookie('csrftoken');\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5c07csrftoken\u653e\u9032post\u7684header\u4e2d"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function createPost(/*UserInputData*/) {\n    const data = {\n        method: \"POST\",\n        headers: {\n            'Content-Type': \"application/json\",\n            'X-CSRFToken':csrftoken\n        },\n        body: JSON.stringify({\n            /*UserInputData*/\n        })\n    }\n    fetch(' /*RequestURL*/', data)\n    .then(() => {\n        getPostList();//fatch the data from server\n    })\n    .catch(err => {\n        console.error(err);\n    })\n}\n")))),(0,r.kt)("h4",{id:"all-code-we-need-to-post"},"All code we need to post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"$(document).ready(function() {\n    $('form').submit(function(e) {\n        e.preventDefault();\n        const title = document.getElementById('title');\n        const content = document.getElementById('content');\n        const author = document.getElementById('author');\n        createPost(title.value, content.value, author.value);\n        title.value=\"\";\n        content.value=\"\";\n        author.value=\"\";\n    });\n});\n//acquire cookie\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n//acquire csrftoken\nconst csrftoken = getCookie('csrftoken');\n\nfunction createPost(title, content, author) {\n    const data = {\n        method: \"POST\",\n        mode:'same-origin',\n        headers: {\n            'Content-Type': \"application/json\",\n            'X-CSRFToken':csrftoken\n        },\n        body: JSON.stringify({\n            title, content, author\n        })\n    }\n    fetch('/api/posts/create/', data)\n    .then(() => {\n        //if successed, fetch data\n        getPostList();\n    })\n    .catch(err => {\n        console.error(err);\n    })\n}\n\n//fetch api data\nconst getPostList=()=>{\n    fetch('/api/posts')\n    .then(res => res.json())\n    .then(data=>{\n        //clear all nodes of root\n        clearChildren(root);\n        //render the data we get\n        renderPosts(data);\n    })\n    .catch(err=>{\n        console.error(err)\n    })\n}\n")),(0,r.kt)("h3",{id:"detail-view"},"Detail View"),(0,r.kt)("p",null,"\u65b0\u589e\u4e00\u500b",(0,r.kt)("inlineCode",{parentName:"p"},"post_detail.html"),"\uff0c\u7576\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"home"),"\u9ede\u64ca\u6642\u53d6\u5f97pk\uff0c\u4e26\u5f9eurls.py\u7684\u8a2d\u5b9a\u9023\u904e\u53bb\u6e32\u67d3\u6307\u5b9a\u5167\u5bb9\u7684\u9801\u9762\u3002"),(0,r.kt)("h5",{id:"url"},"Url"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#posts/urls.py\nurlpatterns = [\n...\n    path('<pk>/', PostDetailView.as_view(), name='post-detail'),\n]\n")),(0,r.kt)("p",null,"\u8981\u7372\u53d6\u7db2\u5740\u5217\u7684\u5167\u5bb9\u53ef\u4ee5\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"window.location"),"\u53d6\u5f97"),(0,r.kt)("h5",{id:"\u53d6\u5f97pk"},"\u53d6\u5f97pk"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//posts/detail.js\nconst pathname=window.location.pathname;\nconst pathnamePart = pathname.split('/');\nconst postID = pathnamePart[pathnamePart.length-2];\n")),(0,r.kt)("h5",{id:"fetch-data-1"},"fetch data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//posts/detail.js\nconst getPost=(postID)=>{\n    fetch(`/api/posts/${postID}/`)\n    .then(res => res.json())\n    .then(data=>{\n        //clear all data\n        //render data\n    })\n    .catch(err=>{\n        console.error(err)\n    })\n}\n")),(0,r.kt)("h5",{id:"add-link-at-homepage"},"Add link at homepage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//posts/main.js\nconst link = createNode('a');\n    link.href = `/posts/${post.id}`;\n//...\nappend(link,title);\nappend(div,link);\n")),(0,r.kt)("h3",{id:"update-view"},"Update view"),(0,r.kt)("p",null,"\u5c07\u6b04\u4f4d\u540d\u7a31\u8a2d\u70ba\u5168\u57df\u8b8a\u6578\uff0cfetch data\u5f8c\u6307\u5b9a\u7d66\u8a72\u8b8a\u6578\uff0c\u5728\u986f\u793a\u5728form\u6b04\u4f4d\u3002\u53d6\u5f97form\u4e0a\u66f4\u65b0\u8cc7\u6599PUT\u56deserver\u7aef\u3002"),(0,r.kt)("h5",{id:"\u66f4\u6539form\u6b04\u4f4d"},"\u66f4\u6539form\u6b04\u4f4d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const title = document.getElementById('title');\nconst content = document.getElementById('content');\nconst author = document.getElementById('author');\n\nconst prepopulateForm=(data)=>{\n    title.value=data.title;\n    content.value=data.content;\n    author.value=data.author;\n}\n\n//fetch api data\nconst getPost=(postID)=>{\n    fetch(`/api/posts/${postID}/`)\n    .then(res => res.json())\n    .then(data=>{\n        prepopulateForm(data);\n        clearChildren(root)\n        renderPost(data)\n    })\n    .catch(err=>{\n        console.error(err)\n    })\n}\ngetPost(postID);\n")),(0,r.kt)("h5",{id:"put\u56deserver\u7aef"},"PUT\u56deserver\u7aef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const updatePost=(title,content,author)=>{\n    const data = {\n        method: \"PUT\",\n        mode:'same-origin',\n        headers: {\n            'Content-Type': \"application/json\",\n            'X-CSRFToken':csrftoken\n        },\n        body: JSON.stringify({\n            title, content, author\n        })\n    }\n    fetch(`/api/posts/${postID}/update/`, data)\n    .then(() => {\n        getPost(postID);\n    })\n    .catch(err => {\n        console.error(err);\n    })\n}\n")),(0,r.kt)("h3",{id:"delete-view"},"Delete View"),(0,r.kt)("h5",{id:"delete-post"},"delete post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const deletePost=(postID)=>{\n    const data = {\n        method: \"DELETE\",\n        mode:'same-origin',\n        headers: {\n            'Content-Type': \"application/json\",\n            'X-CSRFToken':csrftoken\n        }\n    }\n    fetch(`/api/posts/${postID}/delete/`, data)\n    .then(() => {\n        window.location='/';\n    })\n    .catch(err => {\n        console.error(err);\n    })   \n}\n")),(0,r.kt)("h5",{id:"delete-btn"},"delete btn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function appendDeleteBtn(post){\n    const postDiv = document.querySelector('.post-item');\n    const deleteBtn = createNode('button');\n    deleteBtn.className='post-delete-btn';\n    deleteBtn.innerText='Delete';\n    deleteBtn.addEventListener('click',e=>{\n        deletePost(post.id);\n    })\n    append(postDiv,deleteBtn);\n}\n")),(0,r.kt)("h5",{id:"delete-view-1"},"delete view"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PostDeleteView(DestroyAPIView):\n    permission_classes=(AllowAny,)\n    queryset = Post.objects.all()     \n")),(0,r.kt)("h5",{id:"urlpatterns"},"urlpatterns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"path('<pk>/delete/', PostDeleteView.as_view(), name='post-delete'),\n")))}m.isMDXComponent=!0},5529:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/s1-fcdbea01f1088f1fe0ec1d13772e6019.png"}}]);